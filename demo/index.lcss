<!-- =============================================================================================================== -->
<!-- Live CSS, Demo Project                                                                                          -->
<!-- ... developed by: ofzza                                                                                         -->
<!-- =============================================================================================================== -->
body {
    margin: 0px;
    padding: 0px;
}

<!-- Basic binding example -->
<style>
    legend { color: {{ LCSS.color }}; }
</style>

<!-- Using Angular directives inside LiveCSS syntax -->
<style>
    <repeat ng-repeat=" el in LCSS.generateArrayOfLength( LCSS.count ) ">
        .repeated-element:nth-child({{ $index + 1 }}) {
            display: inline-block;
            width: {{ 4 * $index }}px;
            margin: 0px 1px;
            border: 1px solid black;
            text-align: center;
            overflow-x: hidden;
        }
    </repeat>
</style>

<!-- Using 'Window' extension for responsive layout -->
<style import=" ['Window'] " watch=" [ LCSS.color, Window.size, LCSS.layoutWidth, LCSS.layoutLeftWidth, LCSS.layoutRightWidth ] ">

    /* Do calculations: */
    /* {{ containerWidth = (LCSS.layoutWidth / 100) * (Window.size.width - 80) }} */
    /* {{ containerLeftWidth = (LCSS.layoutLeftWidth / 100) * (containerWidth - 20) }} */
    /* {{ containerRightWidth = (LCSS.layoutRightWidth / 100) * (containerWidth - 20) }} */
    /* {{ containerCenterWidth = (containerWidth - (containerLeftWidth + containerRightWidth) - 80) }} */

    .responsive-container {
        display: inline-block;
        margin: 0px 20px;
        padding: 5px;
        width: {{ containerWidth }}px;
        background-color: {{ LCSS.color }};
    }
    .responsive-container .left-panel {
        display: inline-block;
        margin: 0px 5px;
        padding: 5px;
        width: {{ containerLeftWidth }}px;
        background-color: white;
    }
    .responsive-container .right-panel {
        display: inline-block;
        margin: 0px 5px;
        padding: 5px;
        width: {{ containerRightWidth }}px;
        background-color: white;
    }
    .responsive-container .center-panel {
        display: inline-block;
        margin: 0px 5px;
        padding: 5px;
        width: {{ containerCenterWidth }}px;
        background-color: white;
    }

</style>

<!-- Using 'Mouse' extension -->
<style import=" ['Mouse'] " watch=" [ Mouse.position ] ">
    .trackerA {
        position: {{ LCSS.track ? 'absolute' : 'relative' }};
        left: {{ LCSS.track ? Mouse.position.absolute.x : 0 }}px;
        top: {{ LCSS.track ? Mouse.position.absolute.y : 0 }}px;
        width: 40px;
        height: 40px;
        border: 1px solid black;
        border-radius: 20px;
        background-color: white;
    }
    .trackerB {
        position: {{ LCSS.track ? 'absolute' : 'relative' }};
        left: {{ LCSS.track ? (Mouse.position.absolute.x + Math.round(24 * Math.cos( 20 * Math.PI * (Mouse.position.relative.x + Mouse.position.relative.y) ))) : 0 }}px;
        top: {{ LCSS.track ? (Mouse.position.absolute.y + Math.round(24 * Math.sin( 20 * Math.PI * (Mouse.position.relative.x + Mouse.position.relative.y) ))) : 0 }}px;
        width: 16px;
        height: 16px;
        border: 1px solid black;
        border-radius: 8px;
        background-color: white;
    }
</style>