// Live CSS, Dynamic CSS module for AngularJS
// > 0.0.3
// > ofzza, 2014.
// > build: Thu Jul 17 2014 14:38:19
"use strict";!function(){!function(){var a=angular.module("LiveCssDebug",["LiveCssCore","LiveCssDebugDirectives"]);a.provider("LiveCssDebug",[function(){return{$get:["LiveCssCore","$rootScope","$timeout",function(a,b,c){var d={},e=function(a){if(a){this.keys=a;for(var b=[],c=d,e=0;e<a.length;e++){if(c.domains||(c.domains={}),c.domains[a[e]])b.push(c.domains[a[e]]);else{var g={key:a[e],domains:{}};b.push(c.domains[a[e]]=g)}c=c.domains[a[e]]}for(var e=0;e<b.length;e++)if(b[e].cleared){for(var h in b[e])"key"!=h&&"domains"!=h&&"cleared"!=h&&delete b[e][h];b[e].cleared=!1}this.time=function(){return new f(b)}}else this.time=function(){return new f(null)}},f=function(a){a?(this.timestamp={start:(new Date).getTime(),stop:null},this.stop=function(){this.timestamp.stop=(new Date).getTime();for(var b=0;b<a.length;b++)a[b].timer||(a[b].timer={time:0,count:0}),a[b].timer.time+=this.timestamp.stop-this.timestamp.start,a[b].timer.count++}):this.stop=function(){}},g={stats:{domains:{get:function(a,b){if(g.stats.interval>0){if(b&&b.length>0)for(var c=0;c<b.length;c++)a.push(b[c]);return new e(a)}return new e(null)},clear:function(a){if(d.domains){a||(a=d),a.cleared=!0;for(var b in a.domains)g.stats.domains.clear(a.domains[b])}}},clear:function(){g.stats.cleared=!0,g.stats.domains.clear()},interval:0,log:{}}},h=0,i=function(a,b,c,d){c||(c=[]);var e={key:(d?d+".":"")+a.key,parent:d,domain:a.key,children:!1,level:b?b:0,cleared:a.cleared,count:0,time:0},f=(new Date).getTime()-h;if(a.timer&&(e.count=a.timer.count/(f/1e3),e.time=a.timer.time/f),c.push(e),a.domains)for(var d in a.domains)e.children=!0,i(a.domains[d],(b?b:0)+1,c,e.key);return c};return function j(){if(d.domains&&g.stats.interval>0){g.stats.log.timers=[];for(var a in d.domains)for(var b=i(d.domains[a]),e=0;e<b.length;e++)g.stats.log.timers.push(b[e]);g.stats.clear(),h=(new Date).getTime()}else g.stats.log={};c(j,g.stats.interval>0?g.stats.interval:1e3)}(),a.$$services().LiveCssDebugger=g,g}]}}])}(),function(){var a=angular.module("LiveCssDebugDirectives",["LiveCssCore","LiveCssToolkit"]);a.directive("lcssDebug",["LiveCssCore","LiveCssDebug",function(a,b){return{scope:!1,template:'<div>   <div ng-if=" debugger.active.get() ">      <div style="position: fixed; right: 20px; bottom: 4px; padding: 2px 4px; border: 1px solid #aaa; border-radius: 8px 0px 0px 0px; box-shadow: 1px 1px 1px 1px #999; background-color: rgba(255, 255, 255, 0.94); cursor: pointer;">          <span ng-transclude></span>          <a style="margin-left: 20px;" ng-click=" debugger.visible.set( !debugger.visible.get() ) "> Debugger window </a>      </div>      <div ng-show=" debugger.visible.get() " style="position: fixed; right: 20px; bottom: 40px; height: 50%; width: 33%; min-height: 400px; min-width: 380px; overflow-y: scroll; padding: 2px 4px; border: 1px solid #aaa; border-radius: 8px; box-shadow: 1px 1px 1px 1px #999; background-color: rgba(255, 255, 255, 0.8); ">          <div style=" position: absolute; "></div>          <table style="width: 100%; margin: 0px 0px 80px 0px;">              <tr style=" border-bottom: 1px dotted #999; background-color: #aaa; color: #444; font-size: 11px; font-weight: bold;">                  <td style=" padding-left: 10px; "> <input type="checkbox" ng-model=" debugger.collapse.all " title=" Show all" /> </td>                  <td style=" text-align: left; "> Process </td>                  <td style=" width: 20%; text-align: center; "> Calls/Sec </td>                  <td style=" width: 20%; text-align: center; "> Load </td>              </tr>              <tr ng-repeat=" timer in debugger.content.timers " ng-show=" timer.level == 0 || debugger.collapse.is(timer.key) " ng-style=" { \'border-bottom\': \'1px dotted #999\', \'background-color\': (timer.level == 0 ? \'#eee\' : \'none\' ), \'color\': (timer.level != 0 && !timer.cleared ? \'#4a4\' : \'#999\'), \'font-size\': (timer.level == 0 || !timer.children ? \'11px\' : \'9px\'), \'font-weight\': (!timer.children ? \'bold\' : \'normal\') }">                  <td style=" padding-left: 10px; "> <input type="checkbox" ng-hide=" debugger.collapse.all " ng-model=" debugger.collapse.expanded[timer.key] " title=" Collapse / Expand " style=" width: 10px; height: 10px; " /> </td>                  <td ng-style=" { \'padding-left\': (10 * timer.level) + \'px\' } " title=" {{ timer.key }} "> {{ timer.domain }} </td>                  <td style=" text-align: center; "> {{ timer.count | number:2 }} </td>                  <td style=" text-align: center; "> {{ timer.time * 100 | number:2 }}% </td>              </tr>          </table>      </div>      <table ng-show=" debugger.visible.get() " style="position: fixed; right: 44px; bottom: 44px; width: 320px; padding: 2px 4px; border: 1px solid #aaa; border-radius: 8px; background-color: rgba(255, 255, 255, 0.8); font-size: 9px; ">          <td> Refresh every </td>          <td> <input type="range" min="0" max="30000" step="500" ng-model=" debugger.interval.value " ng-change=" debugger.interval.set( debugger.interval.value ); " style="width: 130px;" /> </td>'+"          <td>  {{ ( debugger.interval.value > 0 ? (debugger.interval.value / 1000) + ' secs' : 'never' ) }} </td>      </table>   </div></div>",link:function(a,c,d){var e=!1,f=d.lcssDebug&&a.$eval(d.lcssDebug),g=0;a.debugger={active:{get:function(){return f}},visible:{get:function(){return e},set:function(c){c?(b.stats.interval=g,a.debugger.interval.set(g)):(g=b.stats.interval,b.stats.interval=0,a.debugger.interval.set(g)),e=c}},interval:{set:function(c){a.debugger.interval.value=b.stats.interval=c},value:0},collapse:{expanded:{},all:!0,is:function(b){if(a.debugger.collapse.all)return!0;for(var c=b.split("."),d="",e=0;e<c.length-1;e++)if(d+=(d.length>0?".":"")+c[e],!a.debugger.collapse.expanded[d])return!1;return!0}},content:""},f?(g=1e3,b.stats.interval=g,a.debugger.interval.set(g)):(window.lcss||(window.lcss={}),window.lcss.debug=function(c){g=1e3,b.stats.interval=g,a.debugger.interval.set(g),f="undefined"==typeof c?!0:c?!0:!1,a.$$phase||a.$digest()}),a.$watch(function(){return b.stats.log},function(b){a.debugger.content=b},!0)},transclude:!0,replace:!0}}])}()}();